"use strict"

// This file is generated by Vitraux. Do not edit it manually.
async function initializeElementsForOnlyOnceAtStart() {
    return Promise.resolve();
}

async function updateView(vm) {
    const e0 = globalThis.vitraux.storedElements.getElementByIdAsArray('petowner-name');
    const e1 = globalThis.vitraux.storedElements.getElementByIdAsArray('petowner-address-parent');
    const f2 = globalThis.vitraux.storedElements.getTemplate('petowner-address-template');
    const e3 = globalThis.vitraux.storedElements.getElementsByQuerySelector(document, '.petwoner-address > div');
    const e4 = globalThis.vitraux.storedElements.getElementsByQuerySelector(document, '.petowner-phonenumber');
    const f5 = await globalThis.vitraux.storedElements.fetchElement('./htmlpieces/phoneblock.html');
    const e6 = globalThis.vitraux.storedElements.getElementByIdAsArray('petowner-phonenumber-id');
    const e7 = globalThis.vitraux.storedElements.getElementByIdAsArray('pets-table');
    const c8 = globalThis.vitraux.storedElements.getTemplate('pet-row-template');

    if (vm.v0) {
        globalThis.vitraux.updating.dom.setElementsContent(e0, vm.v0);
        /*poNameFunction(vm.v0);*/
    }

    if (vm.v1) {
        globalThis.vitraux.updating.dom.updateValueByInsertingElements(
            f2,
            e1,
            (content) => globalThis.vitraux.storedElements.getElementsByQuerySelector(content, '.petowner-address-target'),
            (targetChildElements) => globalThis.vitraux.updating.dom.setElementsContent(targetChildElements, vm.v1));
        globalThis.vitraux.updating.dom.setElementsAttribute(e3, 'data-petowner-address', vm.v1);
    }

    if (vm.v2) {
        globalThis.vitraux.updating.dom.updateValueByInsertingElements(
            f5,
            e4,
            (content) => globalThis.vitraux.storedElements.getElementsByQuerySelector(content, '.petowner-phonenumber-target'),
            (targetChildElements) => globalThis.vitraux.updating.dom.setElementsAttribute(targetChildElements, 'data-phonenumber', vm.v2));
        globalThis.vitraux.updating.dom.setElementsContent(e6, vm.v2);
    }

    if (vm.v3) {

    }

    if (vm.c0) {
        const uc0 = async (p, item) => {
            const n0_c0_e0 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.cell-pet-name');
            const n0_c0_e1 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.anchor-cell-pet-name');
            const n0_c0_e2 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.another-anchor-cell-pet-name');
            const n0_c0_e3 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.pet-photo');
            const n0_c0_e4 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.inner-table-vaccines');
            const n0_c0_c5 = await globalThis.vitraux.storedElements.fetchElement('./htmlpieces/row-vaccines.html');
            const n0_c0_e6 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.inner-nav-antiparasitics');
            const n0_c0_c7 = await globalThis.vitraux.storedElements.fetchElement('./htmlpieces/row-antiparasitics.html');

            if (item.v0) {
                globalThis.vitraux.updating.dom.setElementsContent(n0_c0_e0, item.v0);
                globalThis.vitraux.updating.dom.setElementsAttribute(n0_c0_e1, 'href', item.v0);
                globalThis.vitraux.updating.dom.setElementsAttribute(n0_c0_e2, 'href', item.v0);
            }

            if (item.v1) {
                globalThis.vitraux.updating.dom.setElementsAttribute(n0_c0_e3, 'src', item.v1);
            }

            if (item.c0) {
                const uc1 = async (p, item) => {
                    const n1_c0_e0 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.div-vaccine');
                    const n1_c0_e1 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.span-vaccine-date');
                    const n1_c0_e2 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.ingredients-list');
                    const n1_c0_c3 = globalThis.vitraux.storedElements.getTemplate('ingredients-template');

                    if (item.v0) {
                        globalThis.vitraux.updating.dom.setElementsContent(n1_c0_e0, item.v0);
                    }

                    if (item.v1) {
                        globalThis.vitraux.updating.dom.setElementsContent(n1_c0_e1, item.v1);
                    }

                    if (item.c0) {
                        const uc2 = async (p, item) => {
                            const n2_c0_e0 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.ingredient-item');

                            if (item.v0) {
                                globalThis.vitraux.updating.dom.setElementsContent(n2_c0_e0, item.v0);
                            }

                            return Promise.resolve();
                        }

                        await globalThis.vitraux.updating.dom.updateCollectionByPopulatingElements(n1_c0_e2, n1_c0_c3, uc2, item.c0);
                    }

                    return Promise.resolve();
                }

                await globalThis.vitraux.updating.dom.updateTable(n0_c0_e4, n0_c0_c5, uc1, item.c0);
            }

            if (item.c1) {
                const uc3 = async (p, item) => {
                    const n1_c1_e0 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.div-antiparasitics');
                    const n1_c1_e1 = globalThis.vitraux.storedElements.getElementsByQuerySelector(p, '.span-antiparasitics-date');

                    if (item.v0) {
                        globalThis.vitraux.updating.dom.setElementsContent(n1_c1_e0, item.v0);
                    }

                    if (item.v1) {
                        globalThis.vitraux.updating.dom.setElementsContent(n1_c1_e1, item.v1);
                    }

                    return Promise.resolve();
                }

                await globalThis.vitraux.updating.dom.updateCollectionByPopulatingElements(n0_c0_e6, n0_c0_c7, uc3, item.c1);
            }

            return Promise.resolve();
        }

        await globalThis.vitraux.updating.dom.updateTable(e7, c8, uc0, vm.c0);
    }

    return Promise.resolve();
}
